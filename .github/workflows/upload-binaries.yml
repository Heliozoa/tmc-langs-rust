name: Upload CLI binaries

on:
  release:
    types:
      - created

env:
  TAG: ${{ github.event.release.tag_name }} # had some issue using this directly on windows

jobs:
  linux:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target: [i686-unknown-linux-gnu, x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib # required to build for 32-bit arch
      - name: Cargo build
        run: |
          rustup target add i686-unknown-linux-gnu
          cargo build -p tmc-langs-cli --release --verbose --target ${{ matrix.target }}
      - name: Deploy
        run: gsutil cp target/${{ matrix.target }}/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-${{ matrix.target }}-$TAG

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cargo build # crt-static is set with RUSTFLAGS to statically link MSVCRT (VCRUNTIME140.dll)
        run: |
          rustup target add i686-pc-windows-msvc
          $env:RUSTFLAGS="-C target-feature=+crt-static"
          cargo build -p tmc-langs-cli --release --verbose --target ${{ matrix.target }}
      - name: Deploy
        run: |
          $env:python_version=$(python -c 'import sys; print(\".\".join(map(str, sys.version_info[:3])))')
          $env:CLOUDSDK_PYTHON="C:\hostedtoolcache\windows\Python\$env:python_version\x64\python"
          gsutil cp target/${{ matrix.target }}/release/tmc-langs-cli.exe gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-${{ matrix.target }}-$Env:TAG.exe

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cargo build
        run: cargo build -p tmc-langs-cli --release --verbose
      - name: Sign
        run: codesign --force -s - target/release/tmc-langs-cli
      - name: Deploy
        run: gsutil cp target/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-x86_64-apple-darwin-$TAG

  arm:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target: [aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf]
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cargo build
        run: |
          rustup target add ${{ matrix.target }}
          cargo install cross
          cross build -p tmc-langs-cli --release --verbose --target ${{ matrix.target }}
      - name: Deploy
        run: gsutil cp target/${{ matrix.target }}/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-${{ matrix.target }}-$TAG
